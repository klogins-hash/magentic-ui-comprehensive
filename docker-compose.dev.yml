version: '3.8'

services:
  # =============================================================================
  # Development Database Services
  # =============================================================================
  postgres-dev:
    image: pgvector/pgvector:pg15
    container_name: magentic-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: magentic
      POSTGRES_PASSWORD: dev_password
      POSTGRES_DB: magentic_ui_dev
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./setup_extensions.sql:/docker-entrypoint-initdb.d/01-extensions.sql
      - ./setup_vector_tables.sql:/docker-entrypoint-initdb.d/02-vector-tables.sql
    ports:
      - "5433:5432"
    networks:
      - magentic-dev-network

  valkey-dev:
    image: valkey/valkey:7.2-alpine
    container_name: magentic-valkey-dev
    restart: unless-stopped
    command: valkey-server --appendonly yes
    volumes:
      - valkey_dev_data:/data
    ports:
      - "6380:6379"
    networks:
      - magentic-dev-network

  # =============================================================================
  # Development Application Services
  # =============================================================================
  magentic-core-dev:
    build:
      context: .
      dockerfile: docker/Dockerfile.core
      target: builder
    container_name: magentic-core-dev
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://magentic:dev_password@postgres-dev:5432/magentic_ui_dev
      - VALKEY_URL=redis://valkey-dev:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - MAGENTIC_UI_DEBUG=true
      - MAGENTIC_UI_LOG_LEVEL=DEBUG
      - HOT_RELOAD=true
    ports:
      - "8082:8081"
    volumes:
      - .:/app
      - magentic_dev_workdir:/app/workdir
    networks:
      - magentic-dev-network
    depends_on:
      - postgres-dev
      - valkey-dev
    command: ["python", "-m", "magentic_ui.backend.cli", "--port", "8081", "--host", "0.0.0.0", "--debug"]

  voice-backend-dev:
    build:
      context: .
      dockerfile: docker/Dockerfile.voice
    container_name: magentic-voice-dev
    restart: unless-stopped
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - MAGENTIC_UI_URL=http://magentic-core-dev:8081
      - DEBUG=true
      - LOG_LEVEL=DEBUG
    ports:
      - "8766:8765"
    volumes:
      - ./voice-backend:/app
    networks:
      - magentic-dev-network
    depends_on:
      - magentic-core-dev
    command: ["python", "main.py", "--debug"]

  # Frontend development server
  frontend-dev:
    image: node:18-alpine
    container_name: magentic-frontend-dev
    restart: unless-stopped
    working_dir: /app
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "8000:8000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - magentic-dev-network
    command: sh -c "yarn install && yarn start"

# =============================================================================
# Development Networks & Volumes
# =============================================================================
networks:
  magentic-dev-network:
    driver: bridge

volumes:
  postgres_dev_data:
    driver: local
  valkey_dev_data:
    driver: local
  magentic_dev_workdir:
    driver: local
